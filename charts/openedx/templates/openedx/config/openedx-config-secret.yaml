{{- $openedxDbUsername := "" }}
{{- $openedxDbPassword := "" }}
{{- $dbExistingSecret := (lookup "v1" "Secret" .Release.Namespace .Values.openedx.db.credentials) }}
{{- if $dbExistingSecret }}
{{- $openedxDbUsername = $dbExistingSecret.data.username | b64dec }}
{{- $openedxDbPassword = $dbExistingSecret.data.password | b64dec }}
{{- else if not .Values.dryRun }}
{{- fail "Secret '.Values.openedx.db.credentials' not found in namespace" }}
{{- end }}

{{- $secretKey := "" }}
{{- $existingSecretKey := (lookup "v1" "Secret" .Release.Namespace .Values.openedx.secretKey.secretName) }}
{{- if $existingSecretKey }}
{{- $secretKey = (index $existingSecretKey.data .Values.openedx.secretKey.secretKey) | b64dec }}
{{- else if not .Values.dryRun }}
{{- fail "Secret '.Values.openedx.secretKey.secretName' not found in namespace" }}
{{- end }}

{{- $openedxS3AccessKey := "" }}
{{- $s3AccessExistingSecret := (lookup "v1" "Secret" .Release.Namespace .Values.openedx.s3.accessKey.secretName) }}
{{- if $s3AccessExistingSecret }}
{{- $openedxS3AccessKey = (index $s3AccessExistingSecret.data .Values.openedx.s3.accessKey.secretKey) | b64dec }}
{{- else if not .Values.dryRun }}
{{- fail "Secret '.Values.openedx.s3.accessKey.secretname' not found in namespace" }}
{{- end }}

{{- $openedxS3SecretKey := "" }}
{{- $s3ExistingSecret := (lookup "v1" "Secret" .Release.Namespace .Values.openedx.s3.secretKey.secretName) }}
{{- if $s3ExistingSecret }}
{{- $openedxS3SecretKey = (index $s3ExistingSecret.data .Values.openedx.s3.secretKey.secretKey) | b64dec }}
{{- else if not .Values.dryRun }}
{{- fail "Secret '.Values.openedx.s3.secretKey.secretName' not found in namespace" }}
{{- end }}

{{- $celeryBrokerUsername := "" }}
{{- $celeryBrokerPassword := "" }}
{{- $celeryExistingSecret := (lookup "v1" "Secret" .Release.Namespace .Values.openedx.celeryBroker.credentials) }}
{{- if $celeryExistingSecret }}
{{- $celeryBrokerUsername = $celeryExistingSecret.data.username | b64dec }}
{{- $celeryBrokerPassword = $celeryExistingSecret.data.password | b64dec }}
{{- else if not .Values.dryRun }}
{{- fail "Secret '.Values.openedx.celeryBroker.credentials' not found in namespace" }}
{{- end }}

{{- if .Values.openedx.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: openedx-config
  annotations:
    {{- include "openedx.annotations" . | nindent 4 }}
  labels:
    {{- include "openedx.componentLabels" (dict "component" "openedx" "root" .) | nindent 4 }}
type: Opaque

stringData:
  cms.env.yml: |
    SITE_NAME: "{{ .Values.openedx.cms.host }}"
    BOOK_URL: "{{ .Values.openedx.cms.bookUrl }}"
    LOG_DIR: "/openedx/data/logs"
    LOGGING_ENV: "sandbox"
    OAUTH_OIDC_ISSUER: "https://{{ .Values.openedx.lms.host }}/oauth2"
    PLATFORM_NAME: "{{ .Values.openedx.platformName }}"
    FEATURES:
      PREVIEW_LMS_BASE: "{{ .Values.openedx.preview.host }}"
      CERTIFICATES_HTML_VIEW: true
      ENABLE_CSMH_EXTENDED: false
      ENABLE_LEARNER_RECORDS: false
      ENABLE_LIBRARY_INDEX: true
      MILESTONES_APP: true
      ENABLE_PREREQUISITE_COURSES: true
    LMS_ROOT_URL: "https://{{ .Values.openedx.lms.host }}"
    CMS_ROOT_URL: "https://{{ .Values.openedx.cms.host }}"
    CMS_BASE: "{{ .Values.openedx.cms.host }}"
    LMS_BASE: "{{ .Values.openedx.lms.host }}"
    CONTACT_EMAIL: "{{ .Values.openedx.cms.contactEmail }}"
    CELERY_BROKER_TRANSPORT: "{{ .Values.openedx.celeryBroker.transport }}"
    CELERY_BROKER_HOSTNAME: "{{ .Values.openedx.celeryBroker.host }}:{{ .Values.openedx.celeryBroker.port }}"
    CELERY_BROKER_VHOST: "{{ .Values.openedx.celeryBroker.vhost }}"
    CELERY_BROKER_USER: "{{ $celeryBrokerUsername }}"
    CELERY_BROKER_PASSWORD: "{{ $celeryBrokerPassword }}"
    ALTERNATE_WORKER_QUEUES: "lms"
    ENABLE_COMPREHENSIVE_THEMING: true
    EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
    EMAIL_HOST: "smtp"
    EMAIL_PORT: 8025
    EMAIL_USE_TLS: false
    HTTPS: "on"
    LANGUAGE_CODE: "{{ .Values.openedx.languageCode }}"
    SESSION_COOKIE_DOMAIN: "{{ .Values.openedx.cms.host }}"

    SECRET_KEY: "{{ $secretKey }}"
    AWS_ACCESS_KEY_ID: "{{ $openedxS3AccessKey }}"
    AWS_SECRET_ACCESS_KEY: "{{ $openedxS3SecretKey }}"

    DOC_STORE_CONFIG: null
    XQUEUE_INTERFACE:
      django_auth: null
      url: null
    EMAIL_HOST_USER: ""
    EMAIL_HOST_PASSWORD: ""
    AWS_STORAGE_BUCKET_NAME: "{{ .Values.openedx.s3.storageBucket }}"
    AWS_S3_CUSTOM_DOMAIN: ""
    AWS_QUERYSTRING_AUTH: {{ .Values.openedx.s3.queryStringAuth }}
    DATABASES:
      default:
        ENGINE: "{{ .Values.openedx.db.engine }}"
        HOST: "{{ .Values.openedx.db.host }}"
        PORT: {{ .Values.openedx.db.port }}
        NAME: "{{ .Values.openedx.db.name }}"
        USER: "{{ $openedxDbUsername }}"
        PASSWORD: "{{ $openedxDbPassword }}"
        ATOMIC_REQUESTS: true
        OPTIONS:
{{ .Values.openedx.db.options | toYaml | indent 10 }}

  lms.env.yml: |
    SITE_NAME: "{{ .Values.openedx.lms.host }}"
    BOOK_URL: ""
    LOG_DIR: "/openedx/data/logs"
    LOGGING_ENV: "sandbox"
    OAUTH_OIDC_ISSUER: "https://{{ .Values.openedx.lms.host }}/oauth2"
    PLATFORM_NAME: "{{ .Values.openedx.platformName }}"
    FEATURES:
      CERTIFICATES_HTML_VIEW: true
      PREVIEW_LMS_BASE: "{{ .Values.openedx.preview.host }}"
      ENABLE_CSMH_EXTENDED: false
      ENABLE_COMBINED_LOGIN_REGISTRATION: true
      ENABLE_GRADE_DOWNLOADS: true
      ENABLE_LEARNER_RECORDS: false
      ENABLE_MOBILE_REST_API: true
      ENABLE_OAUTH2_PROVIDER: true
      ENABLE_PREREQUISITE_COURSES: true
      ENABLE_THIRD_PARTY_AUTH: true
      MILESTONES_APP: true
    LMS_ROOT_URL: "https://{{ .Values.openedx.lms.host }}"
    CMS_ROOT_URL: "https://{{ .Values.openedx.cms.host }}"
    CMS_BASE: "{{ .Values.openedx.cms.host }}"
    LMS_BASE: "{{ .Values.openedx.lms.host }}"
    CONTACT_EMAIL: "{{ .Values.openedx.cms.contactEmail }}"
    CELERY_BROKER_TRANSPORT: "{{ .Values.openedx.celeryBroker.transport }}"
    CELERY_BROKER_HOSTNAME: "{{ .Values.openedx.celeryBroker.host }}:{{ .Values.openedx.celeryBroker.port }}"
    CELERY_BROKER_VHOST: "{{ .Values.openedx.celeryBroker.vhost }}"
    CELERY_BROKER_USER: "{{ $celeryBrokerUsername }}"
    CELERY_BROKER_PASSWORD: "{{ $celeryBrokerPassword }}"
    ALTERNATE_WORKER_QUEUES: "cms"
    ENABLE_COMPREHENSIVE_THEMING: true
    EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
    EMAIL_HOST: "smtp"
    EMAIL_PORT: 8025
    EMAIL_USE_TLS: false
    ACE_ROUTING_KEY: "edx.lms.core.default"
    HTTPS: "on"
    LANGUAGE_CODE: "{{ .Values.openedx.languageCode }}"
    SESSION_COOKIE_DOMAIN: "{{ .Values.openedx.lms.host }}"

    SECRET_KEY: "{{ $secretKey }}"
    AWS_ACCESS_KEY_ID: "{{ $openedxS3AccessKey }}"
    AWS_SECRET_ACCESS_KEY: "{{ $openedxS3SecretKey }}"
    DOC_STORE_CONFIG: null
    XQUEUE_INTERFACE:
      django_auth: null
      url: null
    EMAIL_HOST_USER: ""
    EMAIL_HOST_PASSWORD: ""
    AWS_STORAGE_BUCKET_NAME: "{{ .Values.openedx.s3.storageBucket }}"
    AWS_S3_CUSTOM_DOMAIN: ""
    AWS_QUERYSTRING_AUTH: {{ .Values.openedx.s3.queryStringAuth }}
    DATABASES:
      default:
        ENGINE: "{{ .Values.openedx.db.engine }}"
        HOST: "{{ .Values.openedx.db.host }}"
        PORT: {{ .Values.openedx.db.port }}
        NAME: "{{ .Values.openedx.db.name }}"
        USER: "{{ $openedxDbUsername }}"
        PASSWORD: "{{ $openedxDbPassword }}"
        ATOMIC_REQUESTS: true
        OPTIONS:
{{ .Values.openedx.db.options | toYaml | indent 10 }}

{{- end -}}
