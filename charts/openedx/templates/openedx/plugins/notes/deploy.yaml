{{- if and .Values.openedx.enabled .Values.openedx.notes.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notes
  annotations:
    {{- include "openedx.annotations" . | nindent 4 }}
  labels:
    {{- include "openedx.componentLabels" (dict "component" "notes" "root" .) | nindent 4 }}
spec:
  progressDeadlineSeconds: {{ .Values.openedx.notes.progressDeadlineSeconds | default 600 }}
  replicas: {{ .Values.openedx.notes.replicas | default 1 }}
  revisionHistoryLimit: {{ .Values.openedx.notes.revisionHistoryLimit | default 10 }}

  selector:
    matchLabels:
      {{- include "openedx.componentSelectorLabels" (dict "component" "notes" "root" .) | nindent 6 }}

  {{- if .Values.openedx.notes.updateStrategy }}
  strategy: {{- toYaml .Values.openedx.notes.updateStrategy | nindent 4 }}
  {{- end }}

  template:
    metadata:
      annotations:
        {{- include "openedx.annotations" . | nindent 8 }}
      labels:
        {{- include "openedx.componentLabels" (dict "component" "notes" "root" .) | nindent 8 }}
    spec:
      dnsPolicy: {{ .Values.openedx.notes.dnsPolicy | default "ClusterFirst" }}
      restartPolicy: {{ .Values.openedx.notes.restartPolicy | default "Always" }}
      schedulerName: {{ .Values.openedx.notes.schedulerName | default "default-scheduler" }}
      # securityContext: { toYaml .Values.openedx.notes.securityContext | default (dict) }
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: {{ .Values.openedx.notes.terminationGracePeriodSeconds | default 30 }}

      {{- include "openedx.imagePullSecrets" . | nindent 6 }}

      containers:
      - name: notes
        image: {{ include "openedx.image" (dict "component" "notes" "root" .) }}
        imagePullPolicy: {{ include "openedx.imagePullPolicy" (dict "component" "notes" "root" .) }}

        {{- if .Values.openedx.notes.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.openedx.notes.diagnosticMode.command "context" $) | nindent 10 }}
        {{- else if .Values.openedx.notes.command }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.openedx.notes.command "context" $) | nindent 10 }}
        {{- else }}
        command: ["gunicorn"]
        {{- end }}

        {{- if .Values.openedx.notes.diagnosticMode.enabled }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.openedx.notes.diagnosticMode.args "context" $) | nindent 10 }}
        {{- else if .Values.openedx.notes.args }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.openedx.notes.args "context" $) | nindent 11 }}
        {{- else }}
        args:
          - "--workers={{ .Values.openedx.notes.workers | default 2 }}"
          - "--name"
          - {{ .Values.openedx.notes.application.name | default "notes" | quote }}
          - "--bind=0.0.0.0:{{ .Values.openedx.notes.application.port }}"
          - "--max-requests={{ .Values.openedx.notes.application.maxRequests | default 1000 }}"
          - "notesserver.wsgi:application"
        {{- end }}

        ports:
        - containerPort: {{ .Values.openedx.notes.application.port }}
          protocol: TCP

        {{- if .Values.openedx.notes.resources }}
        resources: {{- toYaml .Values.openedx.notes.resources | nindent 12 }}
        {{- end }}

        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: {{ .Values.openedx.notes.terminationMessagePath | default "/dev/termination-log" }}
        terminationMessagePolicy: {{ .Values.openedx.notes.terminationMessagePolicy | default "File" }}

        env:
        {{- include "openedx.notes.env" . | nindent 8 }}

        {{- if .Values.openedx.notes.extraEnvVars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.openedx.notes.extraEnvVars "context" $) | nindent 8 }}
        {{- end }}

        volumeMounts:
        - name: settings
          mountPath: /app/edx-notes-api/notesserver/settings/tutor.py
          subPath: tutor.py
        {{- include "openedx.dev.volumeMounts" . | nindent 8 }}

        {{- if .Values.openedx.notes.extraVolumeMounts }}
        {{- include "common.tplvalues.render" (dict "value" .Values.openedx.notes.extraVolumeMounts "context" $) | nindent 8 }}
        {{- end }}

        {{- if .Values.openedx.notes.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.openedx.notes.sidecars "context" $) | nindent 8 }}
        {{- end }}

      volumes:
      - name: settings
        configMap:
          name: notes-settings
          defaultMode: 420
      {{- include "openedx.dev.volumes" . | nindent 6 }}

      {{- if .Values.openedx.notes.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.openedx.notes.extraVolumes "context" $) | nindent 6 }}
      {{- end }}

{{- end -}}
